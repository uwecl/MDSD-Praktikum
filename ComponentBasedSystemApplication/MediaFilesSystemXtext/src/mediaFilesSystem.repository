Repository {
	interface {
		Interface HTTP{
			signature {
				Signature HTTPDownload {
					returntype void				
				},
				Signature HTTPUpload {
					returntype void
				}				
			}
		},
		Interface Sound 
		{
			signature {
				Signature watermark {
					returntype void
				}
			}
		},
		Interface AudioDB
		{
			signature {
				Signature queryDB {
					returntype void
				},
				Signature addFile {
					returntype void
				}
			}
		},
		Interface MediaStore
		{
			signature{
				Signature download {
					returntype void
				},
				Signature upload {
					returntype void
				}
			}		
		}		
	}
	component {
		Component WebGUI
		{
			service{
				Service{
					correspondingSignatures("HTTP.HTTPDownload")
				},
				Service{
					correspondingSignatures("HTTP.HTTPUpload")
				}	
			}
			requiredrole {
				RequiredRole WebGUI_MediaStore {
					interface MediaStore
				}
			}
			providedrole ProvidedRole WebGUI_HTTP 
			{
				interface HTTP
			}
		},
		Component PoolingAudioDB
		{
			service{
				Service{
					correspondingSignatures("AudioDB.queryDB")
				},
				Service{
					correspondingSignatures("AudioDB.addFile")
				}	
			}
			providedrole ProvidedRole PoolingAudioDB_AudioDB 
			{
				interface AudioDB
			}
		},
		Component MediaManager
		{
			service{
				Service{
					correspondingSignatures("MediaStore.upload")
				},
				Service{
					correspondingSignatures("MediaStore.download")
				}	
			}
			requiredrole {
				RequiredRole MediaManager_Sound {
					interface Sound
				},
				RequiredRole MediaManager_AudioDB {
					interface AudioDB
				}
			}
			providedrole ProvidedRole MediaManager_MediaStore
			{
				interface MediaStore
			}
		},
		Component DigitalWatermarking
		{
			service{
				Service{
					correspondingSignatures("Sound.watermark")
				}
			}
			providedrole ProvidedRole DigitalWatermarking_Sound
			{
				interface Sound
			}
		},
		Component DBCache
		{
			service{
				Service{
					correspondingSignatures("AudioDB.queryDB")
				},
				Service{
					correspondingSignatures("AudioDB.addFile")
				}	
			}
			requiredrole {
				RequiredRole DBCache_AudioDB {
					interface AudioDB
				}
			}
			providedrole ProvidedRole MediaManager_MediaStore
			{
				interface AudioDB
			}		
		}

	}
}