/*
 * generated by Xtext 2.9.1
 */
package edu.kit.ipd.sdq.mdsdpc.environment.ide.contentassist.antlr;

import com.google.inject.Inject;
import edu.kit.ipd.sdq.mdsdpc.environment.ide.contentassist.antlr.internal.InternalEnvironmentParser;
import edu.kit.ipd.sdq.mdsdpc.environment.services.EnvironmentGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class EnvironmentParser extends AbstractContentAssistParser {

	@Inject
	private EnvironmentGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalEnvironmentParser createParser() {
		InternalEnvironmentParser result = new InternalEnvironmentParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEnvironmentAccess().getGroup(), "rule__Environment__Group__0");
					put(grammarAccess.getEnvironmentAccess().getGroup_4(), "rule__Environment__Group_4__0");
					put(grammarAccess.getEnvironmentAccess().getGroup_4_3(), "rule__Environment__Group_4_3__0");
					put(grammarAccess.getEnvironmentAccess().getGroup_5(), "rule__Environment__Group_5__0");
					put(grammarAccess.getEnvironmentAccess().getGroup_5_3(), "rule__Environment__Group_5_3__0");
					put(grammarAccess.getContainerAccess().getGroup(), "rule__Container__Group__0");
					put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
					put(grammarAccess.getLinkAccess().getGroup_6(), "rule__Link__Group_6__0");
					put(grammarAccess.getEnvironmentAccess().getNameAssignment_2(), "rule__Environment__NameAssignment_2");
					put(grammarAccess.getEnvironmentAccess().getContainerAssignment_4_2(), "rule__Environment__ContainerAssignment_4_2");
					put(grammarAccess.getEnvironmentAccess().getContainerAssignment_4_3_1(), "rule__Environment__ContainerAssignment_4_3_1");
					put(grammarAccess.getEnvironmentAccess().getLinkAssignment_5_2(), "rule__Environment__LinkAssignment_5_2");
					put(grammarAccess.getEnvironmentAccess().getLinkAssignment_5_3_1(), "rule__Environment__LinkAssignment_5_3_1");
					put(grammarAccess.getContainerAccess().getNameAssignment_2(), "rule__Container__NameAssignment_2");
					put(grammarAccess.getLinkAccess().getNameAssignment_1(), "rule__Link__NameAssignment_1");
					put(grammarAccess.getLinkAccess().getContainerAssignment_5(), "rule__Link__ContainerAssignment_5");
					put(grammarAccess.getLinkAccess().getContainerAssignment_6_1(), "rule__Link__ContainerAssignment_6_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalEnvironmentParser typedParser = (InternalEnvironmentParser) parser;
			typedParser.entryRuleEnvironment();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public EnvironmentGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(EnvironmentGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
